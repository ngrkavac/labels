// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.cr.labels.service.impl;

import com.cr.labels.domain.Attachment;
import com.cr.labels.repository.AttachmentRepository;
import com.cr.labels.repository.GlobalSearch;
import com.cr.labels.service.AttachmentService;
import com.cr.labels.service.impl.AttachmentServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect AttachmentServiceImpl_Roo_Service_Impl {
    
    declare parents: AttachmentServiceImpl implements AttachmentService;
    
    declare @type: AttachmentServiceImpl: @Service;
    
    declare @type: AttachmentServiceImpl: @Transactional(readOnly = true);
    
    public AttachmentRepository AttachmentServiceImpl.attachmentRepository;
    
    @Autowired
    public AttachmentServiceImpl.new(AttachmentRepository attachmentRepository) {
        this.attachmentRepository = attachmentRepository;
    }

    @Transactional(readOnly = false)
    public Attachment AttachmentServiceImpl.save(Attachment entity) {
        return attachmentRepository.save(entity);
    }
    
    @Transactional(readOnly = false)
    public void AttachmentServiceImpl.delete(Long id) {
         attachmentRepository.delete(id);
    }
    
    @Transactional(readOnly = false)
    public List<Attachment> AttachmentServiceImpl.save(Iterable<Attachment> entities) {
        return attachmentRepository.save(entities);
    }
    
    @Transactional(readOnly = false)
    public void AttachmentServiceImpl.delete(Iterable<Long> ids) {
        List<Attachment> toDelete = attachmentRepository.findAll(ids);
        attachmentRepository.deleteInBatch(toDelete);
    }
    
    public List<Attachment> AttachmentServiceImpl.findAll() {
        return attachmentRepository.findAll();
    }
    
    public List<Attachment> AttachmentServiceImpl.findAll(Iterable<Long> ids) {
        return attachmentRepository.findAll(ids);
    }
    
    public Attachment AttachmentServiceImpl.findOne(Long id) {
        return attachmentRepository.findOne(id);
    }
    
    public long AttachmentServiceImpl.count() {
        return attachmentRepository.count();
    }
    
    public Page<Attachment> AttachmentServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return attachmentRepository.findAll(globalSearch, pageable);
    }
    
}
