// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.cr.labels.service.impl;

import com.cr.labels.domain.Label;
import com.cr.labels.repository.GlobalSearch;
import com.cr.labels.repository.LabelRepository;
import com.cr.labels.service.api.LabelService;
import com.cr.labels.service.impl.LabelServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect LabelServiceImpl_Roo_Service_Impl {
    
    declare parents: LabelServiceImpl implements LabelService;
    
    declare @type: LabelServiceImpl: @Service;
    
    declare @type: LabelServiceImpl: @Transactional(readOnly = true);
    
    public LabelRepository LabelServiceImpl.labelRepository;
    
    @Autowired
    public LabelServiceImpl.new(LabelRepository labelRepository) {
        this.labelRepository = labelRepository;
    }

    @Transactional(readOnly = false)
    public Label LabelServiceImpl.save(Label entity) {
        return labelRepository.save(entity);
    }
    
    @Transactional(readOnly = false)
    public void LabelServiceImpl.delete(Long id) {
         labelRepository.delete(id);
    }
    
    @Transactional(readOnly = false)
    public List<Label> LabelServiceImpl.save(Iterable<Label> entities) {
        return labelRepository.save(entities);
    }
    
    @Transactional(readOnly = false)
    public void LabelServiceImpl.delete(Iterable<Long> ids) {
        List<Label> toDelete = labelRepository.findAll(ids);
        labelRepository.deleteInBatch(toDelete);
    }
    
    public List<Label> LabelServiceImpl.findAll() {
        return labelRepository.findAll();
    }
    
    public List<Label> LabelServiceImpl.findAll(Iterable<Long> ids) {
        return labelRepository.findAll(ids);
    }
    
    public Label LabelServiceImpl.findOne(Long id) {
        return labelRepository.findOne(id);
    }
    
    public long LabelServiceImpl.count() {
        return labelRepository.count();
    }
    
    public Page<Label> LabelServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return labelRepository.findAll(globalSearch, pageable);
    }
    
}
