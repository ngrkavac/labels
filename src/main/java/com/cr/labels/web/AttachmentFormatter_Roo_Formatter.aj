// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.cr.labels.web;

import com.cr.labels.domain.Attachment;
import com.cr.labels.service.AttachmentService;
import com.cr.labels.web.AttachmentFormatter;
import java.text.ParseException;
import java.util.Locale;
import org.springframework.core.convert.ConversionService;
import org.springframework.format.Formatter;
import org.springframework.util.StringUtils;

privileged aspect AttachmentFormatter_Roo_Formatter {
    
    declare parents: AttachmentFormatter implements Formatter<Attachment>;
    
    public AttachmentService AttachmentFormatter.attachmentService;
    
    public ConversionService AttachmentFormatter.conversionService;
    
    public AttachmentFormatter.new(AttachmentService attachmentService, ConversionService conversionService) {
        this.attachmentService = attachmentService;
        this.conversionService = conversionService;
    }

    public Attachment AttachmentFormatter.parse(String text, Locale locale) throws ParseException {
        if (text == null || !StringUtils.hasText(text)) {
            return null;
        }
        Long id = conversionService.convert(text, Long.class);
        return attachmentService.findOne(id);
    }
    
    public String AttachmentFormatter.print(Attachment attachment, Locale locale) {
        return attachment == null ? null : new StringBuilder().append(attachment.getFileName()).append(" - ").append(attachment.getCreatedBy()).append(" - ").append(attachment.getFile()).toString();
    }
    
}
