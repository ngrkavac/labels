// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.cr.labels.web;

import com.cr.labels.domain.Label;
import com.cr.labels.service.api.LabelService;
import com.cr.labels.web.LabelFormatter;
import java.text.ParseException;
import java.util.Locale;
import org.springframework.core.convert.ConversionService;
import org.springframework.format.Formatter;
import org.springframework.util.StringUtils;

privileged aspect LabelFormatter_Roo_Formatter {
    
    declare parents: LabelFormatter implements Formatter<Label>;
    
    public LabelService LabelFormatter.labelService;
    
    public ConversionService LabelFormatter.conversionService;
    
    public LabelFormatter.new(LabelService labelService, ConversionService conversionService) {
        this.labelService = labelService;
        this.conversionService = conversionService;
    }

    public Label LabelFormatter.parse(String text, Locale locale) throws ParseException {
        if (text == null || !StringUtils.hasText(text)) {
            return null;
        }
        Long id = conversionService.convert(text, Long.class);
        return labelService.findOne(id);
    }
    
    public String LabelFormatter.print(Label label, Locale locale) {
        return label == null ? null : new StringBuilder().append(label.getLabelKey()).append(" - ").append(label.getLabelValue()).toString();
    }
    
}
